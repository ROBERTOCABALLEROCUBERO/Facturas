// <auto-generated />
using System;
using Facturas.Mapper;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Facturas.Migrations
{
    [DbContext(typeof(FacturasContext))]
    partial class FacturasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Facturas.Models.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("date");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Poblacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("Facturas.Models.Factura", b =>
                {
                    b.Property<int>("NumeroFactura")
                        .HasColumnType("int");

                    b.Property<int>("ClienteID")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.HasKey("NumeroFactura");

                    b.HasIndex("ClienteID");

                    b.ToTable("Facturas", (string)null);
                });

            modelBuilder.Entity("Facturas.Models.LineaFactura", b =>
                {
                    b.Property<int>("LineaFacturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LineaFacturaId"));

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FacturaId")
                        .HasColumnType("int");

                    b.Property<int?>("FacturaNumeroFactura")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Unidades")
                        .HasColumnType("int");

                    b.HasKey("LineaFacturaId");

                    b.HasIndex("FacturaId");

                    b.HasIndex("FacturaNumeroFactura");

                    b.ToTable("LineasFactura", (string)null);
                });

            modelBuilder.Entity("Facturas.Models.Factura", b =>
                {
                    b.HasOne("Facturas.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Facturas.Models.LineaFactura", b =>
                {
                    b.HasOne("Facturas.Models.Factura", "Factura")
                        .WithMany()
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Facturas.Models.Factura", null)
                        .WithMany("LineasFactura")
                        .HasForeignKey("FacturaNumeroFactura");

                    b.Navigation("Factura");
                });

            modelBuilder.Entity("Facturas.Models.Factura", b =>
                {
                    b.Navigation("LineasFactura");
                });
#pragma warning restore 612, 618
        }
    }
}
